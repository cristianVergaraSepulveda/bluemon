<?xml version="1.0" encoding="UTF-8"?>

<zk xmlns:h="xhtml">
<h:div id="div" style="border:1px solid black; width:250px; height:250px;">
        <hbox  > 
        <flash droppable="true" draggable="true" id="myInstrument" src="instruments/Glas.swf?currentValue=0&amp;min=0&amp;lo=10&amp;li=20&amp;hi=80&amp;ho=90&amp;max=100" width="128" height="128" /> 
        <flash droppable="true" draggable="true" id="myInstrument2" src="instruments/Gauge.swf?currentValue=0&amp;min=0&amp;lo=10&amp;li=20&amp;hi=80&amp;ho=90&amp;max=100" width="128" height="128" /> 
        
        </hbox>    
        </h:div>
        <window width="100px" height="100px" title="win" border="normal" droppable="true" draggable="true"  />
	<window width="300px" height="300px" title="win2" border="normal" droppable="true" draggable="true" onDrop="move(event.dragged)"  >

        <label id="variable1" value="33" droppable="true" draggable="true" onDrop="move(event.dragged)" > sensor1 </label>
        <label id="variable2" value="50" droppable="true" draggable="true" > sensor2 </label>
        
        </window>
        <intbox value="123456" draggable="true"/>
        <button label="test" draggable="true"/>
        <window width="200px" height="200px" title="test" border="normal" droppable="true" onDrop='alert("onDrop")'/>
        <zscript><![CDATA[
        import java.util.*;
        import org.zkoss.zk.au.*;
        import org.zkoss.zk.ui.*;
        import org.zkoss.zk.ui.event.*;
        import org.zkoss.zk.ui.event.EventListener;
        
        
        div.setWidgetOverride("_droppable" ,"\'true\'");
        
        String script = "zAu.send(new zk.Event(this, 'onDrop', event.data, {toServer:true}));";
        div.setWidgetListener("onDrop", script);
        
        div.setAuService(new AuService () {
                public boolean service(AuRequest request, boolean everError) {
                final String cmd = request.getCommand();
                if (cmd.equals(Events.ON_DROP)) {
                    Events.postEvent(DropEvent.getDropEvent(request));
                    return true; //indicate it has been processed
                }
                return false; //not processed at all
            }
        });
        
        div.addEventListener("onDrop", new EventListener() {				
            public void onEvent(Event event) throws Exception {
                DropEvent devt = (DropEvent) event;
                    Component comp = devt.getDragged();
                    if (comp != null) {
                        event.getTarget().appendChild(comp);
                    }
                }
        });
        void move(Component dragged) {
            if (self instanceof Listitem) {
                self.parent.insertBefore(dragged, self);
            } else {
                self.appendChild(dragged);
            }
        }
        
	]]></zscript>
        
</zk>
